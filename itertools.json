{
  "name": "itertools",
  "bench_files": [
    {
      "name": "bench1",
      "source": "benches/bench1.rs",
      "benches": [
        "slice iter",
        "slice iter rev",
        "zip default zip",
        "zipdot i32 default zip",
        "zipdot f32 default zip",
        "zip default zip3",
        "zip slices ziptuple",
        "zipslices",
        "zipslices mut",
        "zipdot i32 zipslices",
        "zipdot f32 zipslices",
        "zip checked counted loop",
        "zipdot i32 checked counted loop",
        "zipdot f32 checked counted loop",
        "zipdot f32 checked counted unrolled loop",
        "zip unchecked counted loop",
        "zipdot i32 unchecked counted loop",
        "zipdot f32 unchecked counted loop",
        "zip unchecked counted loop3",
        "group by lazy 1",
        "group by lazy 2",
        "slice chunks",
        "chunks lazy 1",
        "equal",
        "merge default",
        "merge by cmp",
        "merge by lt",
        "kmerge default",
        "kmerge tenway",
        "step vec 2",
        "step vec 10",
        "step range 2",
        "step range 10",
        "cartesian product iterator",
        "cartesian product fold",
        "multi cartesian product iterator",
        "multi cartesian product fold",
        "cartesian product nested for",
        "all equal",
        "all equal for",
        "all equal default",
        "permutations iter",
        "permutations range",
        "permutations slice"
      ],
      "sources": []
    },
    {
      "name": "combinations",
      "source": "benches/combinations.rs",
      "benches": [
        "comb for1",
        "comb for2",
        "comb for3",
        "comb for4",
        "comb c1",
        "comb c2",
        "comb c3",
        "comb c4",
        "comb c14"
      ],
      "sources": []
    },
    {
      "name": "combinations_with_replacement",
      "source": "benches/combinations_with_replacement.rs",
      "benches": [
        "comb replacement n10k5",
        "comb replacement n5 k10",
        "comb replacement n10 k10"
      ],
      "sources": []
    },
    {
      "name": "fold_specialization",
      "source": "benches/fold_specialization.rs",
      "benches": [
        "external",
        "internal specialized",
        "internal unspecialized"
      ],
      "sources": []
    },
    {
      "name": "powerset",
      "source": "benches/powerset.rs",
      "benches": [
        "powerset 0",
        "powerset 1",
        "powerset 2",
        "powerset 4",
        "powerset 8",
        "powerset 12"
      ],
      "sources": []
    },
    {
      "name": "tree_fold1",
      "source": "benches/tree_fold1.rs",
      "benches": [
        "fold1 10k sum",
        "fold1 10k complex iter",
        "fold1 10k string format",
        "tree fold1 stack 10k sum",
        "tree fold1 stack 10k complex iter",
        "tree fold1 stack 10k string format",
        "tree fold1 vec 10k sum",
        "tree fold1 vec 10k complex iter",
        "tree fold1 vec 10k string format",
        "fold1 100 sum",
        "fold1 100 complex iter",
        "fold1 100 string format",
        "tree fold1 stack 100 sum",
        "tree fold1 stack 100 complex iter",
        "tree fold1 stack 100 string format",
        "tree fold1 vec 100 sum",
        "tree fold1 vec 100 complex iter",
        "tree fold1 vec 100 string format",
        "fold1 08 sum",
        "fold1 08 complex iter",
        "fold1 08 string format",
        "tree fold1 stack 08 sum",
        "tree fold1 stack 08 complex iter",
        "tree fold1 stack 08 string format",
        "tree fold1 vec 08 sum",
        "tree fold1 vec 08 complex iter",
        "tree fold1 vec 08 string format"
      ],
      "sources": []
    },
    {
      "name": "tuple_combinations",
      "source": "benches/tuple_combinations.rs",
      "benches": [
        "tuple comb for1",
        "tuple comb for2",
        "tuple comb for3",
        "tuple comb for4",
        "tuple comb c1",
        "tuple comb c2",
        "tuple comb c3",
        "tuple comb c4"
      ],
      "sources": []
    },
    {
      "name": "tuples",
      "source": "benches/tuples.rs",
      "benches": [
        "for chunks 1",
        "for windows 1",
        "tuple chunks 1",
        "slice chunks 1",
        "tuple windows 1",
        "slice windows 1",
        "for chunks 2",
        "for windows 2",
        "tuple chunks 2",
        "slice chunks 2",
        "tuple windows 2",
        "slice windows 2",
        "for chunks 3",
        "for windows 3",
        "tuple chunks 3",
        "slice chunks 3",
        "tuple windows 3",
        "slice windows 3",
        "for chunks 4",
        "for windows 4",
        "tuple chunks 4",
        "slice chunks 4",
        "tuple windows 4",
        "slice windows 4"
      ],
      "sources": []
    }
  ]
}